export const data = JSON.parse("{\"key\":\"v-94caf998\",\"path\":\"/posts/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0/javase/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html\",\"title\":\"java基础-面向对象\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"java基础-面向对象\",\"date\":\"2023-02-16T00:00:00.000Z\",\"category\":[\"JavaSE\"],\"summary\":\"黑马2022资料阶段一：java基础-第三章、第七章 3-1 面向对象基础上 07-两个对象内存图 \\\" 需要注意的是，第二次创建对象时，类的字节码文件不需要再次加载到方法区。调用成员变量方法的时候，在堆内存中保存的是同一个成员方法的地址(方法区)，只是堆内存地址(指向方法区的指针)不一样。且每次执行都会压栈，执行完会弹栈。\\\" 08-两个引用指向同一个对象内存\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://www.iocaop.com/posts/%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0/javase/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"赖卓成的笔记\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"java基础-面向对象\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2025-01-10T10:19:24.000Z\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-02-16T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2025-01-10T10:19:24.000Z\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"3-1 面向对象基础上\",\"slug\":\"_3-1-面向对象基础上\",\"link\":\"#_3-1-面向对象基础上\",\"children\":[{\"level\":3,\"title\":\"07-两个对象内存图\",\"slug\":\"_07-两个对象内存图\",\"link\":\"#_07-两个对象内存图\",\"children\":[]},{\"level\":3,\"title\":\"08-两个引用指向同一个对象内存图\",\"slug\":\"_08-两个引用指向同一个对象内存图\",\"link\":\"#_08-两个引用指向同一个对象内存图\",\"children\":[]}]},{\"level\":2,\"title\":\"3-2面向对象基础下\",\"slug\":\"_3-2面向对象基础下\",\"link\":\"#_3-2面向对象基础下\",\"children\":[{\"level\":3,\"title\":\"12-this关键字\",\"slug\":\"_12-this关键字\",\"link\":\"#_12-this关键字\",\"children\":[]},{\"level\":3,\"title\":\"13-this的内存原理\",\"slug\":\"_13-this的内存原理\",\"link\":\"#_13-this的内存原理\",\"children\":[]},{\"level\":3,\"title\":\"15~17-构造方法格式、调用时机和作用、注意事项\",\"slug\":\"_15-17-构造方法格式、调用时机和作用、注意事项\",\"link\":\"#_15-17-构造方法格式、调用时机和作用、注意事项\",\"children\":[]}]},{\"level\":2,\"title\":\"7-1面向对象进阶-分类和static\",\"slug\":\"_7-1面向对象进阶-分类和static\",\"link\":\"#_7-1面向对象进阶-分类和static\",\"children\":[{\"level\":3,\"title\":\"01-分类思想概述\",\"slug\":\"_01-分类思想概述\",\"link\":\"#_01-分类思想概述\",\"children\":[]}]},{\"level\":2,\"title\":\"02-分类思想之黑马信息管理系统\",\"slug\":\"_02-分类思想之黑马信息管理系统\",\"link\":\"#_02-分类思想之黑马信息管理系统\",\"children\":[{\"level\":3,\"title\":\"03-分包思想\",\"slug\":\"_03-分包思想\",\"link\":\"#_03-分包思想\",\"children\":[]},{\"level\":3,\"title\":\"04-包的注意事项、类之间的访问\",\"slug\":\"_04-包的注意事项、类之间的访问\",\"link\":\"#_04-包的注意事项、类之间的访问\",\"children\":[]},{\"level\":3,\"title\":\"05-07学生信息管理系统\",\"slug\":\"_05-07学生信息管理系统\",\"link\":\"#_05-07学生信息管理系统\",\"children\":[]},{\"level\":3,\"title\":\"11-12问题分析、static的引出\",\"slug\":\"_11-12问题分析、static的引出\",\"link\":\"#_11-12问题分析、static的引出\",\"children\":[]},{\"level\":3,\"title\":\"12-static关键字的特点\",\"slug\":\"_12-static关键字的特点\",\"link\":\"#_12-static关键字的特点\",\"children\":[]},{\"level\":3,\"title\":\"13-static注意事项\",\"slug\":\"_13-static注意事项\",\"link\":\"#_13-static注意事项\",\"children\":[]}]},{\"level\":2,\"title\":\"7-3~7-4继承\",\"slug\":\"_7-3-7-4继承\",\"link\":\"#_7-3-7-4继承\",\"children\":[{\"level\":3,\"title\":\"01-继承入门\",\"slug\":\"_01-继承入门\",\"link\":\"#_01-继承入门\",\"children\":[]},{\"level\":3,\"title\":\"02-继承的好处和坏处\",\"slug\":\"_02-继承的好处和坏处\",\"link\":\"#_02-继承的好处和坏处\",\"children\":[]},{\"level\":3,\"title\":\"03-继承的特点\",\"slug\":\"_03-继承的特点\",\"link\":\"#_03-继承的特点\",\"children\":[]},{\"level\":3,\"title\":\"04-继承中成员变量的访问特点\",\"slug\":\"_04-继承中成员变量的访问特点\",\"link\":\"#_04-继承中成员变量的访问特点\",\"children\":[]},{\"level\":3,\"title\":\"05-this和super访问成员的格式\",\"slug\":\"_05-this和super访问成员的格式\",\"link\":\"#_05-this和super访问成员的格式\",\"children\":[]},{\"level\":3,\"title\":\"06-继承中成员方法的访问特点\",\"slug\":\"_06-继承中成员方法的访问特点\",\"link\":\"#_06-继承中成员方法的访问特点\",\"children\":[]},{\"level\":3,\"title\":\"07-方法重写概述和应用场景\",\"slug\":\"_07-方法重写概述和应用场景\",\"link\":\"#_07-方法重写概述和应用场景\",\"children\":[]},{\"level\":3,\"title\":\"08-方法重写注意事项\",\"slug\":\"_08-方法重写注意事项\",\"link\":\"#_08-方法重写注意事项\",\"children\":[]},{\"level\":3,\"title\":\"09-权限修饰符\",\"slug\":\"_09-权限修饰符\",\"link\":\"#_09-权限修饰符\",\"children\":[]},{\"level\":3,\"title\":\"10-继承中构造方法的访问特点\",\"slug\":\"_10-继承中构造方法的访问特点\",\"link\":\"#_10-继承中构造方法的访问特点\",\"children\":[]},{\"level\":3,\"title\":\"11-继承中构造方法的访问特点-父类中没有无参构造方法\",\"slug\":\"_11-继承中构造方法的访问特点-父类中没有无参构造方法\",\"link\":\"#_11-继承中构造方法的访问特点-父类中没有无参构造方法\",\"children\":[]},{\"level\":3,\"title\":\"12-继承中成员变量的内存图解\",\"slug\":\"_12-继承中成员变量的内存图解\",\"link\":\"#_12-继承中成员变量的内存图解\",\"children\":[]},{\"level\":3,\"title\":\"14-抽象类\",\"slug\":\"_14-抽象类\",\"link\":\"#_14-抽象类\",\"children\":[]},{\"level\":3,\"title\":\"15-抽象类的注意事项\",\"slug\":\"_15-抽象类的注意事项\",\"link\":\"#_15-抽象类的注意事项\",\"children\":[]},{\"level\":3,\"title\":\"16-模板设计模式\",\"slug\":\"_16-模板设计模式\",\"link\":\"#_16-模板设计模式\",\"children\":[]},{\"level\":3,\"title\":\"17-final关键字\",\"slug\":\"_17-final关键字\",\"link\":\"#_17-final关键字\",\"children\":[]},{\"level\":3,\"title\":\"19-代码块\",\"slug\":\"_19-代码块\",\"link\":\"#_19-代码块\",\"children\":[]}]},{\"level\":2,\"title\":\"7-5~7-6 接口、多态、内部类\",\"slug\":\"_7-5-7-6-接口、多态、内部类\",\"link\":\"#_7-5-7-6-接口、多态、内部类\",\"children\":[{\"level\":3,\"title\":\"03-接口的介绍\",\"slug\":\"_03-接口的介绍\",\"link\":\"#_03-接口的介绍\",\"children\":[]},{\"level\":3,\"title\":\"04-接口的定义和特点\",\"slug\":\"_04-接口的定义和特点\",\"link\":\"#_04-接口的定义和特点\",\"children\":[]},{\"level\":3,\"title\":\"05-接口中成员的特点\",\"slug\":\"_05-接口中成员的特点\",\"link\":\"#_05-接口中成员的特点\",\"children\":[]},{\"level\":3,\"title\":\"06~07 JDK8接口中成员的特点\",\"slug\":\"_06-07-jdk8接口中成员的特点\",\"link\":\"#_06-07-jdk8接口中成员的特点\",\"children\":[]},{\"level\":3,\"title\":\"08-jdk9版本中接口成员的特点\",\"slug\":\"_08-jdk9版本中接口成员的特点\",\"link\":\"#_08-jdk9版本中接口成员的特点\",\"children\":[]},{\"level\":3,\"title\":\"09-类和接口的关系\",\"slug\":\"_09-类和接口的关系\",\"link\":\"#_09-类和接口的关系\",\"children\":[]},{\"level\":3,\"title\":\"12-多态的前提条件\",\"slug\":\"_12-多态的前提条件\",\"link\":\"#_12-多态的前提条件\",\"children\":[]},{\"level\":3,\"title\":\"13-多态中成员访问的特点\",\"slug\":\"_13-多态中成员访问的特点\",\"link\":\"#_13-多态中成员访问的特点\",\"children\":[]},{\"level\":3,\"title\":\"14-多态的好处和弊端\",\"slug\":\"_14-多态的好处和弊端\",\"link\":\"#_14-多态的好处和弊端\",\"children\":[]},{\"level\":3,\"title\":\"15-多态中的转型\",\"slug\":\"_15-多态中的转型\",\"link\":\"#_15-多态中的转型\",\"children\":[]},{\"level\":3,\"title\":\"16-多态中转型存在的风险和解决方案\",\"slug\":\"_16-多态中转型存在的风险和解决方案\",\"link\":\"#_16-多态中转型存在的风险和解决方案\",\"children\":[]},{\"level\":3,\"title\":\"18-内部类-成员内部类\",\"slug\":\"_18-内部类-成员内部类\",\"link\":\"#_18-内部类-成员内部类\",\"children\":[]},{\"level\":3,\"title\":\"19-私有成员内部类-静态成员内部类\",\"slug\":\"_19-私有成员内部类-静态成员内部类\",\"link\":\"#_19-私有成员内部类-静态成员内部类\",\"children\":[]},{\"level\":3,\"title\":\"20-局部内部类\",\"slug\":\"_20-局部内部类\",\"link\":\"#_20-局部内部类\",\"children\":[]},{\"level\":3,\"title\":\"21-匿名内部类\",\"slug\":\"_21-匿名内部类\",\"link\":\"#_21-匿名内部类\",\"children\":[]},{\"level\":3,\"title\":\"22-匿名内部类的使用场景\",\"slug\":\"_22-匿名内部类的使用场景\",\"link\":\"#_22-匿名内部类的使用场景\",\"children\":[]},{\"level\":3,\"title\":\"23-Lambda初体验和函数式编程思想\",\"slug\":\"_23-lambda初体验和函数式编程思想\",\"link\":\"#_23-lambda初体验和函数式编程思想\",\"children\":[]},{\"level\":3,\"title\":\"24-Lambda表达式的格式说明和前提条件\",\"slug\":\"_24-lambda表达式的格式说明和前提条件\",\"link\":\"#_24-lambda表达式的格式说明和前提条件\",\"children\":[]},{\"level\":3,\"title\":\"25- lambda练习-带参无返回值\",\"slug\":\"_25-lambda练习-带参无返回值\",\"link\":\"#_25-lambda练习-带参无返回值\",\"children\":[]},{\"level\":3,\"title\":\"26- lambda练习-无参带返回值\",\"slug\":\"_26-lambda练习-无参带返回值\",\"link\":\"#_26-lambda练习-无参带返回值\",\"children\":[]},{\"level\":3,\"title\":\"27- lambda练习-带参带返回值\",\"slug\":\"_27-lambda练习-带参带返回值\",\"link\":\"#_27-lambda练习-带参带返回值\",\"children\":[]},{\"level\":3,\"title\":\"28-lambda的省略模式\",\"slug\":\"_28-lambda的省略模式\",\"link\":\"#_28-lambda的省略模式\",\"children\":[]},{\"level\":3,\"title\":\"29-lambda表达式和匿名内部类的区别\",\"slug\":\"_29-lambda表达式和匿名内部类的区别\",\"link\":\"#_29-lambda表达式和匿名内部类的区别\",\"children\":[]}]}],\"git\":{\"createdTime\":1736504364000,\"updatedTime\":1736504364000,\"contributors\":[{\"name\":\"赖卓成\",\"email\":\"911823616@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":27.54,\"words\":8263},\"filePathRelative\":\"posts/个人学习/javase/面向对象.md\",\"localizedDate\":\"2023年2月16日\"}")
